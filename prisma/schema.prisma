generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                        String @id @default(cuid())
  userId                    String
  type                      String
  provider                  String
  providerAccountId         String
  refresh_token             String? // @db.Text
  access_token              String? // @db.Text
  expires_at                Int?
  refresh_token_expires_in  Int?    // @db.Text
  token_type                String?
  scope                     String?
  id_token                  String? // @db.Text
  session_state             String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 
model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  playlist        Playlist?
  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
 
  @@unique([identifier, token])
}

model Movie {
  id              String  @id @default(cuid())
  name            String
  releaseDate     DateTime
  director        String
  description     String
  videoFilePath   String
  bannerFilePath  String
  playlistEntries PlaylistEntry[]
}

model Playlist {
  id              String  @id @default(cuid())
  userId          String  @unique
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  playlistEntries PlaylistEntry[]
}

model PlaylistEntry {
  id              String  @id @default(cuid())
  playlistId      String
  movieId         String
  playlist        Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  movie           Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
}
